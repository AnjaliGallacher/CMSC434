<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta
			name="viewport"
			content="width=device-width, initial-scale=1.0, user-scalable=no"
		/>
		<title>Modern Home Page</title>
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link
			href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap"
			rel="stylesheet"
		/>
		<style>
			:root {
				/* Primary & Accent Colors */
				--primary-color: #0a84ff; /* Updated iOS Blue */
				--primary-light: #e6f3ff;
				--accent-purple: #af52de; /* iOS Purple */
				--accent-teal: #5ac8fa; /* iOS Teal */
				--accent-orange: #ff9f0a; /* iOS Orange */
				--accent-green: #30d15b; /* iOS Green */

				/* Background & Surface Colors */
				--background-color: #f2f2f7; /* Lighter Gray for overall background */
				--surface-color: #ffffff; /* White for cards/surfaces */
				--surface-secondary-color: #f8f9fa; /* Slightly off-white for subtle contrast */

				/* Text Colors */
				--text-primary: #1c1c1e; /* Near black */
				--text-secondary: #636366; /* Medium gray */
				--text-tertiary: #aeaeb2; /* Lighter gray */

				/* Border & Shadow Colors */
				--border-color: #e5e5ea;
				--shadow-color: rgba(0, 0, 0, 0.04);
				--shadow-strong-color: rgba(0, 0, 0, 0.08);

				/* Chart Specific */
				--chart-track-color: #ebebf0; /* Background track for charts */
				--chart-sleep-color: var(--accent-purple);
			}

			/* Basic Reset & Body */
			body,
			html {
				margin: 0;
				padding: 0;
				font-family: "Inter", -apple-system, BlinkMacSystemFont,
					"Segoe UI", Roboto, Helvetica, Arial, sans-serif;
				height: 100%;
				background-color: #dcdce1; /* Background outside the phone */
				-webkit-font-smoothing: antialiased;
				-moz-osx-font-smoothing: grayscale;
			}
			* {
				box-sizing: border-box;
			}

			/* Phone Container Simulation */
			.phone-container {
				width: 375px;
				height: 667px;
				border: 1px solid var(--border-color);
				margin: 30px auto;
				background-color: var(
					--background-color
				); /* Use the lighter gray */
				display: flex;
				flex-direction: column;
				position: relative;
				overflow: hidden;
				border-radius: 25px; /* More pronounced rounding */
				box-shadow: 0 12px 35px var(--shadow-strong-color);
			}

			/* Header */
			.header {
				display: flex;
				justify-content: space-between;
				align-items: center;
				padding: 18px 20px 10px 20px; /* Reduced bottom padding */
				flex-shrink: 0;
				position: relative;
				z-index: 10;
				background-color: var(
					--background-color
				); /* Match background */
			}
			.menu-icon,
			.notification-icon {
				font-size: 22px;
				color: var(--text-primary);
				cursor: pointer;
				padding: 5px;
				transition: color 0.2s ease;
			}
			.menu-icon:hover,
			.notification-icon:hover {
				color: var(--primary-color);
			}
			.notification-icon::after {
				/* Notification dot */
				content: "";
				display: block;
				width: 8px;
				height: 8px;
				background-color: var(--primary-color);
				border-radius: 50%;
				position: absolute;
				top: 18px;
				right: 18px;
				border: 1.5px solid var(--background-color);
			}

			/* Side Menu (Reused - Assuming it exists) */
			.side-menu {
				position: absolute;
				top: 0;
				left: 0;
				width: 75%;
				max-width: 280px;
				height: 100%;
				background-color: var(--surface-color);
				border-right: 1px solid var(--border-color);
				padding: 60px 25px 30px 25px;
				transform: translateX(-100%);
				transition: transform 0.35s cubic-bezier(0.4, 0, 0.2, 1);
				z-index: 100;
				box-shadow: 5px 0 15px var(--shadow-strong-color);
			}
			.side-menu.open {
				transform: translateX(0);
			}
			.side-menu a {
				/* Simplified styling */
				display: block;
				padding: 18px 0;
				text-decoration: none;
				color: var(--text-primary);
				font-size: 18px;
				font-weight: 500;
				border-bottom: 1px solid var(--border-color);
				transition: color 0.2s ease;
			}
			.side-menu a:last-child {
				border-bottom: none;
			}
			.side-menu a:hover {
				color: var(--primary-color);
			}

			/* Main Content Area */
			.main-content {
				flex-grow: 1;
				overflow-y: auto;
				padding: 0px 20px 30px 20px; /* No top padding needed */
				scrollbar-width: none;
				-ms-overflow-style: none;
			}
			.main-content::-webkit-scrollbar {
				display: none;
			}

			/* Greeting Message */
			.greeting {
				font-size: 26px; /* Larger */
				font-weight: 700; /* Bold */
				color: var(--text-primary);
				margin: 10px 0 20px 0; /* Spacing */
				padding-left: 5px; /* Slight indent */
			}

			/* Time Filters */
			.time-filters {
				display: flex;
				gap: 10px; /* Space between buttons */
				margin-bottom: 25px; /* Space below filters */
				padding-left: 5px; /* Match greeting indent */
			}
			.filter-btn {
				padding: 8px 16px; /* Button size */
				border: none;
				border-radius: 20px; /* Pill shape */
				font-size: 14px;
				font-weight: 600; /* Semibold */
				color: var(--text-secondary);
				background-color: var(--surface-color); /* Use surface color */
				cursor: pointer;
				transition: all 0.2s ease;
				box-shadow: 0 2px 5px var(--shadow-color);
			}
			.filter-btn:hover {
				background-color: var(--surface-secondary-color);
				color: var(--text-primary);
			}
			.filter-btn.active {
				background-color: var(--primary-color);
				color: #ffffff; /* White text on active */
				box-shadow: 0 3px 8px rgba(0, 122, 255, 0.3); /* Blue shadow */
			}

			/* --- Card Styles --- */
			.card {
				background-color: var(--surface-color);
				border-radius: 18px; /* Consistent rounding */
				margin-bottom: 20px; /* Space between cards */
				padding: 20px;
				box-shadow: 0 5px 15px var(--shadow-color);
				overflow: hidden; /* Ensure content respects border-radius */
				transition: transform 0.2s ease, box-shadow 0.2s ease;
			}
			.card:hover {
				transform: translateY(-3px);
				box-shadow: 0 8px 20px var(--shadow-strong-color);
			}
			.card-header {
				display: flex;
				align-items: center;
				margin-bottom: 15px; /* Space below header */
				font-size: 13px;
				font-weight: 600; /* Semibold */
				color: var(--text-secondary);
				text-transform: uppercase; /* Match sketch */
				letter-spacing: 0.5px;
			}
			.card-header-icon {
				font-size: 18px;
				margin-right: 8px;
				color: var(--text-tertiary); /* Subtle icon color */
			}
			.card-body {
				display: flex;
				align-items: center; /* Default alignment */
			}

			/* Sleep Analysis Card */
			.sleep-card .card-header-icon {
				color: var(--chart-sleep-color);
			} /* Specific icon color */
			.sleep-card .card-body {
				justify-content: space-between; /* Space chart and text */
				align-items: center;
			}
			.sleep-chart-container {
				width: 100px; /* Chart size */
				height: 100px;
				position: relative; /* For positioning text inside */
				margin-right: 20px; /* Space between chart and text */
			}
			/* CSS Conic Gradient Chart */
			.sleep-chart {
				width: 100%;
				height: 100%;
				border-radius: 50%;
				background: conic-gradient(
					var(--chart-sleep-color) 0% 80.4%,
					/* Value from sketch */ var(--chart-track-color) 80.4% 100%
				);
				/* Create the donut hole */
				mask-image: radial-gradient(
					transparent 55%,
					/* Adjust inner hole size */ black 56%
				);
				-webkit-mask-image: radial-gradient(
					/* Safari */ transparent 55%,
					black 56%
				);
			}
			.sleep-chart-text {
				position: absolute;
				top: 50%;
				left: 50%;
				transform: translate(-50%, -50%);
				text-align: center;
				font-weight: 600;
			}
			.sleep-chart-percentage {
				font-size: 18px;
				color: var(--text-primary);
				line-height: 1.2;
			}
			.sleep-chart-label {
				font-size: 11px;
				color: var(--text-secondary);
			}
			.sleep-details {
				text-align: right;
			}
			.sleep-duration {
				font-size: 24px;
				font-weight: 600;
				color: var(--text-primary);
				margin-bottom: 4px;
			}
			.sleep-duration-label {
				font-size: 13px;
				color: var(--text-secondary);
				font-weight: 500;
			}

			/* Stats Grid (for smaller cards) */
			.stats-grid {
				display: grid;
				grid-template-columns: repeat(2, 1fr); /* Two equal columns */
				gap: 15px; /* Space between grid items */
			}
			.stat-card {
				padding: 15px; /* Slightly less padding for smaller cards */
				margin-bottom: 0; /* Grid gap handles spacing */
				display: flex;
				flex-direction: column; /* Stack header and icon */
				align-items: flex-start; /* Align header left */
				min-height: 140px; /* Ensure consistent height */
			}
			.stat-card .card-header {
				margin-bottom: 10px; /* Less space below header */
			}
			.stat-card .card-body {
				flex-grow: 1; /* Allow body to fill space */
				width: 100%;
				justify-content: center; /* Center the icon */
				align-items: center; /* Center the icon */
			}
			.stat-card-icon {
				font-size: 48px; /* Larger icons for visual emphasis */
				line-height: 1;
			}

			/* Specific Icon Colors (optional, adds personality) */
			.goals-card .card-header {
				color: var(--accent-green);
			}
			.kcal-card .card-header {
				color: var(--accent-orange);
			}
			.water-card .card-header {
				color: var(--accent-teal);
			}
			.exercise-card .card-header {
				color: var(--primary-color);
			}
		</style>
	</head>
	<body>
		<div class="phone-container">
			<!-- Header -->
			<div class="header">
				<div class="menu-icon" id="menu-toggle" title="Menu">☰</div>
				<div class="notification-icon" title="Notifications"></div>
			</div>

			<!-- Side Menu (Initially Hidden - reuse from previous example) -->
			<div class="side-menu" id="sideMenu">
				<a href="#" class="active">Home</a>
				<a href="#">Profile</a>
				<a href="#">Activity Feed</a>
				<a href="#">Settings</a>
			</div>

			<!-- Main Scrollable Content Area -->
			<div class="main-content">
				<!-- Greeting -->
				<h1 class="greeting">Hello User,</h1>

				<!-- Time Filters -->
				<div class="time-filters" id="timeFilters">
					<button class="filter-btn active" data-filter="daily">
						Daily
					</button>
					<button class="filter-btn" data-filter="weekly">
						Weekly
					</button>
					<button class="filter-btn" data-filter="monthly">
						Monthly
					</button>
				</div>

				<!-- Sleep Analysis Card -->
				<div class="card sleep-card">
					<div class="card-header">
						<span class="card-header-icon">🌙</span> Sleep Analysis
					</div>
					<div class="card-body">
						<div class="sleep-chart-container">
							<div class="sleep-chart"></div>
							<div class="sleep-chart-text">
								<div class="sleep-chart-percentage">80.4%</div>
								<div class="sleep-chart-label">Quality</div>
							</div>
						</div>
						<div class="sleep-details">
							<div class="sleep-duration">7h 30m</div>
							<div class="sleep-duration-label">
								Sleep duration
							</div>
						</div>
					</div>
				</div>

				<!-- Stats Grid -->
				<div class="stats-grid">
					<!-- Goals Card -->
					<div class="card stat-card goals-card">
						<div class="card-header">Goals</div>
						<div class="card-body">
							<span class="stat-card-icon">🌈</span>
						</div>
					</div>

					<!-- Kcal Consumed Card -->
					<div class="card stat-card kcal-card">
						<div class="card-header">Kcal Consumed</div>
						<div class="card-body">
							<span class="stat-card-icon">🍔</span>
						</div>
					</div>

					<!-- Water Consumed Card -->
					<div class="card stat-card water-card">
						<div class="card-header">Water Consumed</div>
						<div class="card-body">
							<span class="stat-card-icon">💧</span>
							<!-- Droplet emoji looks cleaner -->
						</div>
					</div>

					<!-- Exercise Tracker Card -->
					<div class="card stat-card exercise-card">
						<div class="card-header">Exercise Tracker</div>
						<div class="card-body">
							<span class="stat-card-icon">🏋️</span>
							<!-- Weight lifter emoji -->
						</div>
					</div>
				</div>
			</div>
			<!-- End Main Content -->
		</div>
		<!-- End Phone Container -->

		<script>
			// --- Hamburger Menu Toggle (Reused) ---
			const menuToggle = document.getElementById("menu-toggle");
			const sideMenu = document.getElementById("sideMenu");

			if (menuToggle && sideMenu) {
				menuToggle.addEventListener("click", (event) => {
					event.stopPropagation();
					sideMenu.classList.toggle("open");
				});

				document.addEventListener("click", (event) => {
					if (
						sideMenu.classList.contains("open") &&
						!sideMenu.contains(event.target) &&
						event.target !== menuToggle
					) {
						sideMenu.classList.remove("open");
					}
				});
			}

			// --- Time Filter Button Handler ---
			const timeFiltersContainer = document.getElementById("timeFilters");
			if (timeFiltersContainer) {
				const filterButtons =
					timeFiltersContainer.querySelectorAll(".filter-btn");

				timeFiltersContainer.addEventListener("click", (event) => {
					if (event.target.classList.contains("filter-btn")) {
						// Remove active class from all buttons
						filterButtons.forEach((btn) =>
							btn.classList.remove("active")
						);
						// Add active class to the clicked button
						event.target.classList.add("active");

						// Optional: Get the selected filter value
						const selectedFilter = event.target.dataset.filter;
						console.log("Selected Filter:", selectedFilter);
						// Here you would typically trigger data updates based on the filter
					}
				});
			}
		</script>
	</body>
</html>
