<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta
			name="viewport"
			content="width=device-width, initial-scale=1.0, user-scalable=no"
		/>
		<title>Health Dashboard - iPad View</title>
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link
			href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap"
			rel="stylesheet"
		/>
		<link rel="stylesheet" href="style.css" />
		<style>
			/* Page-specific overrides if necessary */
			/* Example: Slightly different body background ONLY for dashboard? */
			/* body { background-color: #FAFAFC; }
            .dark-mode body { background-color: #0F0F0F; } */
		</style>
	</head>
	<body>
		<div class="ipad-container">
			<!-- Header -->
			<div class="header transparent-bg">
				<!-- Transparent Header -->
				<div class="header-logo">Wellness Hub</div>
				<div class="header-actions">
					<div
						class="action-icon notification-icon"
						title="Notifications"
					>
						üîî
					</div>
					<div class="action-icon search-icon" title="Search">üîç</div>
				</div>
			</div>

			<!-- Main Scrollable Content Area -->
			<div class="main-content less-top-padding">
				<!-- Less Top Padding -->
				<!-- Greeting -->
				<h1 class="greeting">Hello Alex,</h1>

				<!-- Time Filters -->
				<div class="time-filters" id="timeFilters">
					<button class="filter-btn active" data-filter="daily">
						Today
					</button>
					<button class="filter-btn" data-filter="weekly">
						This Week
					</button>
					<button class="filter-btn" data-filter="monthly">
						This Month
					</button>
				</div>

				<!-- Sleep Analysis Card -->
				<div
					class="card sleep-card"
					onclick="navigateTo('sleep-details.shtml')"
				>
					<div class="card-header">
						<div class="card-header-title">
							<span class="card-header-icon">üåô</span> Sleep
							Analysis
						</div>
					</div>
					<div class="card-body">
						<div class="sleep-chart-container">
							<div class="sleep-chart" id="sleepChart"></div>
							<div class="sleep-chart-text">
								<div
									class="sleep-chart-percentage"
									id="sleepQuality"
								>
									--%
								</div>
								<div class="sleep-chart-label">Quality</div>
							</div>
						</div>
						<div class="sleep-details">
							<div class="sleep-duration" id="sleepDuration">
								--h --m
							</div>
							<div class="sleep-duration-label">
								Last Night's Sleep
							</div>
						</div>
					</div>
				</div>

				<!-- Stats Grid -->
				<div class="stats-grid">
					<!-- Steps Card -->
					<div
						class="stat-card steps-card"
						onclick="navigateTo('activity-details.shtml')"
					>
						<div class="card-header">
							<div class="card-header-title">
								<span class="card-header-icon">üë£</span> Steps
							</div>
						</div>
						<div class="card-body">
							<div class="stat-value" id="stepsValue">--</div>
							<div class="stat-label">Goal: 10,000 steps</div>
							<div class="stat-progress-bar">
								<div
									class="stat-progress-bar-fill"
									id="stepsProgress"
									style="width: 0%"
								></div>
							</div>
						</div>
					</div>
					<!-- Exercise Card -->
					<div
						class="stat-card exercise-card"
						onclick="navigateTo('log-exercise.shtml')"
					>
						<div class="card-header">
							<div class="card-header-title">
								<span class="card-header-icon">üèÉ</span>
								Exercise
							</div>
						</div>
						<div class="card-body">
							<div class="stat-value" id="exerciseValue">
								--<span class="stat-unit">min</span>
							</div>
							<div class="stat-label">Goal: 60 min active</div>
							<div class="stat-progress-bar">
								<div
									class="stat-progress-bar-fill"
									id="exerciseProgress"
									style="width: 0%"
								></div>
							</div>
						</div>
					</div>
					<!-- Kcal Consumed Card -->
					<div
						class="stat-card kcal-card"
						onclick="navigateTo('log-meal.shtml')"
					>
						<div class="card-header">
							<div class="card-header-title">
								<span class="card-header-icon">üî•</span> Kcal
								Consumed
							</div>
						</div>
						<div class="card-body">
							<div class="stat-value" id="kcalValue">
								--<span class="stat-unit">kcal</span>
							</div>
							<div class="stat-label">Goal: 2000 kcal</div>
							<div class="stat-progress-bar">
								<div
									class="stat-progress-bar-fill"
									id="kcalProgress"
									style="width: 0%"
								></div>
							</div>
						</div>
					</div>
					<!-- Water Consumed Card -->
					<div
						class="stat-card water-card"
						onclick="navigateTo('log-water.shtml')"
					>
						<div class="card-header">
							<div class="card-header-title">
								<span class="card-header-icon">üíß</span> Water
								Intake
							</div>
						</div>
						<div class="card-body">
							<div class="stat-value" id="waterValue">
								--<span class="stat-unit">L</span>
							</div>
							<div class="stat-label">Goal: 2.0 L</div>
							<div class="stat-progress-bar">
								<div
									class="stat-progress-bar-fill"
									id="waterProgress"
									style="width: 0%"
								></div>
							</div>
						</div>
					</div>
					<!-- Mindfulness Card -->
					<div
						class="stat-card mind-card"
						onclick="navigateTo('log-mindfulness.shtml')"
					>
						<div class="card-header">
							<div class="card-header-title">
								<span class="card-header-icon">üßò</span>
								Mindfulness
							</div>
						</div>
						<div class="card-body">
							<div class="stat-value" id="mindValue">
								--<span class="stat-unit">min</span>
							</div>
							<div class="stat-label">Goal: 15 min today</div>
							<div class="stat-progress-bar">
								<div
									class="stat-progress-bar-fill"
									id="mindProgress"
									style="width: 0%"
								></div>
							</div>
						</div>
					</div>
					<!-- Goals Card -->
					<div
						class="stat-card goals-card"
						onclick="navigateTo('goals.shtml')"
					>
						<div class="card-header">
							<div class="card-header-title">
								<span class="card-header-icon">üéØ</span> Goals
							</div>
						</div>
						<div class="card-body">
							<div class="stat-value" id="goalsValue">
								-- / --
							</div>
							<div class="stat-label">Active Goals Met Today</div>
							<div class="stat-progress-bar">
								<div
									class="stat-progress-bar-fill"
									id="goalsProgress"
									style="width: 0%"
								></div>
							</div>
						</div>
					</div>
				</div>
				<!-- End Stats Grid -->
			</div>
			<!-- End Main Content -->

			<!-- Bottom Navigation Bar -->
			<nav class="bottom-nav" id="bottomNav">
				<a href="todo.shtml" class="nav-item active" data-page="home">
					<span class="nav-icon">üè†</span>
					<span class="nav-label">Home</span>
				</a>
				<a href="progress.shtml" class="nav-item" data-page="progress">
					<span class="nav-icon">üìä</span>
					<span class="nav-label">Progress</span>
				</a>
				<a href="log-meal.shtml" class="nav-item" data-page="log-meal">
					<span class="nav-icon">üçî</span>
					<span class="nav-label">Log Meal</span>
				</a>
				<a
					href="log-exercise.shtml"
					class="nav-item"
					data-page="log-exercise"
				>
					<span class="nav-icon">üèÉ</span>
					<span class="nav-label">Log Exercise</span>
				</a>
				<a href="profile.shtml" class="nav-item" data-page="profile">
					<span class="nav-icon">üë§</span>
					<span class="nav-label">Profile</span>
				</a>
			</nav>
		</div>
		<!-- End ipad Container -->

		<script>
			// --- Apply theme early ---
			const htmlElement = document.documentElement;
			const savedTheme = localStorage.getItem("theme") || "light";
			if (savedTheme === "dark") {
				htmlElement.classList.add("dark-mode");
			} else {
				htmlElement.classList.remove("dark-mode");
			}
			// --- End Apply theme early ---

			// --- Time Filter Button Handler ---
			const timeFiltersContainer = document.getElementById("timeFilters");
			if (timeFiltersContainer) {
				/* ... same code ... */
			}

			// --- Mock Data Update Function ---
			function updateDashboardData(filter) {
				console.log(`Updating dashboard for ${filter} view...`);
				// Selectors for elements to update
				const sleepDurationEl =
					document.getElementById("sleepDuration");
				const sleepQualityEl = document.getElementById("sleepQuality");
				const sleepChartEl = document.getElementById("sleepChart");
				const stepsValueEl = document.getElementById("stepsValue");
				const stepsProgressEl =
					document.getElementById("stepsProgress");
				const exerciseValueEl =
					document.getElementById("exerciseValue");
				const exerciseProgressEl =
					document.getElementById("exerciseProgress");
				const kcalValueEl = document.getElementById("kcalValue");
				const kcalProgressEl = document.getElementById("kcalProgress");
				const waterValueEl = document.getElementById("waterValue");
				const waterProgressEl =
					document.getElementById("waterProgress");
				const mindValueEl = document.getElementById("mindValue");
				const mindProgressEl = document.getElementById("mindProgress");
				const goalsValueEl = document.getElementById("goalsValue");
				const goalsProgressEl =
					document.getElementById("goalsProgress");

				// Mock data based on filter
				let data = {};
				if (filter === "daily") {
					data = {
						sleep: "7h 30m",
						quality: 80,
						steps: 8520,
						exercise: 45,
						kcal: 1580,
						water: 1.2,
						mind: 10,
						goalsMet: 3,
						goalsTotal: 5,
					};
				} else if (filter === "weekly") {
					data = {
						sleep: "7h 15m",
						quality: 75,
						steps: 64500,
						exercise: 300,
						kcal: 14500,
						water: 10.5,
						mind: 60,
						goalsMet: 20,
						goalsTotal: 35,
					}; // Weekly totals/avgs
					// Adjust labels for weekly view if needed
				} else if (filter === "monthly") {
					data = {
						sleep: "7h 20m",
						quality: 78,
						steps: 280000,
						exercise: 1200,
						kcal: 60000,
						water: 45.0,
						mind: 250,
						goalsMet: 80,
						goalsTotal: 150,
					}; // Monthly totals/avgs
					// Adjust labels for monthly view if needed
				}

				// Update DOM (with basic formatting)
				if (sleepDurationEl)
					sleepDurationEl.textContent = data.sleep || "--h --m";
				if (sleepQualityEl)
					sleepQualityEl.textContent = data.quality
						? `${data.quality}%`
						: "--%";
				if (sleepChartEl)
					sleepChartEl.style.background = `conic-gradient(var(--accent-purple) 0% ${
						data.quality || 0
					}%, var(--chart-track-color) ${data.quality || 0}% 100%)`;

				if (stepsValueEl)
					stepsValueEl.textContent =
						data.steps?.toLocaleString() || "--";
				if (stepsProgressEl)
					stepsProgressEl.style.width = `${Math.min(
						100,
						((data.steps || 0) / 10000) * 100
					)}%`; // Assuming 10k goal

				if (exerciseValueEl)
					exerciseValueEl.innerHTML = `${
						data.exercise || "--"
					}<span class="stat-unit">min</span>`;
				if (exerciseProgressEl)
					exerciseProgressEl.style.width = `${Math.min(
						100,
						((data.exercise || 0) / 60) * 100
					)}%`; // Assuming 60 min goal

				if (kcalValueEl)
					kcalValueEl.innerHTML = `${
						data.kcal?.toLocaleString() || "--"
					}<span class="stat-unit">kcal</span>`;
				if (kcalProgressEl)
					kcalProgressEl.style.width = `${Math.min(
						100,
						((data.kcal || 0) / 2000) * 100
					)}%`; // Assuming 2000 kcal goal

				if (waterValueEl)
					waterValueEl.innerHTML = `${
						data.water?.toFixed(1) || "--"
					}<span class="stat-unit">L</span>`;
				if (waterProgressEl)
					waterProgressEl.style.width = `${Math.min(
						100,
						((data.water || 0) / 2.0) * 100
					)}%`; // Assuming 2.0 L goal

				if (mindValueEl)
					mindValueEl.innerHTML = `${
						data.mind || "--"
					}<span class="stat-unit">min</span>`;
				if (mindProgressEl)
					mindProgressEl.style.width = `${Math.min(
						100,
						((data.mind || 0) / 15) * 100
					)}%`; // Assuming 15 min goal

				if (goalsValueEl)
					goalsValueEl.textContent = `${data.goalsMet || "--"} / ${
						data.goalsTotal || "--"
					}`;
				if (goalsProgressEl)
					goalsProgressEl.style.width = `${
						((data.goalsMet || 0) / (data.goalsTotal || 1)) * 100
					}%`;

				// Optional: Slightly delay alert to let UI update visually first
				// setTimeout(() => alert(`Dashboard updated for ${filter} view (mock data)`), 100);
			}

			// --- Mock Navigation Function ---
			function navigateTo(url) {
				/* ... same code ... */
			}

			// --- Initial Setup ---
			document.addEventListener("DOMContentLoaded", () => {
				// Theme already applied by early script
				updateDashboardData("daily"); // Load initial daily data

				// Add listeners for header icons
				const notificationIcon =
					document.querySelector(".notification-icon");
				if (notificationIcon)
					notificationIcon.addEventListener("click", () =>
						alert("Show Notifications")
					);
				const searchIcon = document.querySelector(".search-icon");
				if (searchIcon)
					searchIcon.addEventListener("click", () =>
						alert("Show Search")
					);

				// Active state for bottom nav
				const bottomNavContainer = document.getElementById("bottomNav");
				if (bottomNavContainer) {
					const navItems =
						bottomNavContainer.querySelectorAll(".nav-item");
					const currentPage =
						window.location.pathname.split("/").pop() ||
						"todo.shtml";
					navItems.forEach((item) => {
						const itemPage = item
							.getAttribute("href")
							?.split("/")
							.pop();
						item.classList.toggle(
							"active",
							itemPage === currentPage
						);
					});
				}
			});
		</script>
	</body>
</html>
